{"version":3,"sources":["firebase/firebase-config.js","helpers/loadNotes.js","types/types.js","helpers/fileUpload.js","actions/notes.js","components/notes/NotesAppBar.js","hooks/useForm.js","components/notes/NoteScreen.js","actions/auth.js","components/journal/JournalEntry.js","components/journal/JournalEntries.js","components/journal/Sidebar.js","components/journal/NothingSelected.js","components/journal/JournalScreen.js","components/auth/LoginScreen.js","actions/ui.js","components/auth/RegisterScreen.js","routers/AuthRouter.js","routers/PublicRouter.js","routers/PrivateRouter.js","components/auth/SplashScreen.js","routers/AppRouter.js","reducers/notesReducer.js","reducers/uiReducers.js","store/store.js","reducers/authReducer.js","JournalApp.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","db","firestore","googleAuthProvider","auth","GoogleAuthProvider","loadNotes","uid","a","collection","get","noteSnap","notes","forEach","snapHijo","push","id","data","console","log","types","fileUpload","file","formData","FormData","append","fetch","method","body","resp","ok","json","cloudResp","secure_url","activeNote","note","type","payload","addNewNote","setNotes","startSaveNotes","dispatch","getState","url","noteToFiresotre","doc","update","refreshNote","Swal","fire","title","idNote","deleteNote","NotesAppBar","useDispatch","useSelector","state","active","className","name","style","display","onChange","e","target","files","text","allowOutsideClick","willOpen","showLoading","urlFile","close","startUploading","onClick","document","querySelector","click","useForm","initialState","useState","values","setValues","reset","newInitialState","handleInputChange","value","NoteScreen","formValue","activeID","useRef","useEffect","current","placeholder","autoComplete","src","alt","disptach","delete","startLoading","finishLoading","login","displayName","logout","JournalEntry","date","noteDate","moment","backgroundSize","backgroundImage","substring","format","JournalEntries","map","entry","key","Sidebar","signOut","newNote","Date","getTime","add","docRef","NothingSelected","JournalScreen","LoginScreen","loading","ui","email","password","formValues","onSubmit","preventDefault","signInWithEmailAndPassword","then","user","catch","message","startLoginWithEmailPassword","disabled","signInWithPopup","to","setError","errorString","RegisterScreen","msgError","userName","userEmail","userPassword","userPasswordConfirm","isFormValid","trim","length","validator","isEmail","createUserWithEmailAndPassword","updateProfile","AuthRouter","exact","path","component","PublicRouter","isAuthenticated","Component","rest","props","prototype","PropTypes","bool","isRequired","func","PrivateRouter","SplashScreen","AppRouter","checkingDBLogin","setCheckingDBLogin","isLoggedIn","setIsLoggedIn","onAuthStateChanged","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","reducers","combineReducers","action","filter","store","createStore","applyMiddleware","thunk","JournalApp","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.b90008b7.chunk.js","sourcesContent":["import firebase from 'firebase/app'\r\nimport 'firebase/firestore'\r\nimport 'firebase/auth'\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyBN5qZtg_A2z7nV5Cm4uvpbf9M8gaO0yzE\",\r\n    authDomain: \"react-app-curso-32084.firebaseapp.com\",\r\n    databaseURL: \"https://react-app-curso-32084.firebaseio.com\",\r\n    projectId: \"react-app-curso-32084\",\r\n    storageBucket: \"react-app-curso-32084.appspot.com\",\r\n    messagingSenderId: \"502524986375\",\r\n    appId: \"1:502524986375:web:e604c2f62e541653c296a2\"\r\n};\r\n\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\n// Referencia a la base de datos\r\nconst db = firebase.firestore()\r\nconst googleAuthProvider = new firebase.auth.GoogleAuthProvider()\r\n\r\nexport {\r\n    db, \r\n    googleAuthProvider,\r\n    firebase\r\n}","import { db } from \"../firebase/firebase-config\"\r\n\r\nexport const loadNotes = async (uid) => {\r\n    const noteSnap = await db.collection(`${uid}/journal/notes`).get()\r\n    const notes = []\r\n\r\n    noteSnap.forEach( snapHijo => {\r\n        notes.push({\r\n            id: snapHijo.id,\r\n            ...snapHijo.data()\r\n        })\r\n    })\r\n\r\n    console.log(notes)\r\n\r\n    return notes;\r\n}","\r\n\r\nexport const types = {\r\n    login: '[Auth] login',\r\n    logout: '[Auth] logout',\r\n    \r\n    uiSetError: '[UI] Set error',\r\n    uiRemoveError: '[UI] Remove error',\r\n\r\n    uiStartLoading: '[UI] Start loading',\r\n    uiFinishLoading: '[UI] Finish loading',\r\n\r\n    notesAddNew: '[Notes] New note',\r\n    notesActive: '[Notes] Set active note',\r\n    notesLoad: '[Notes] Load notes',\r\n    notesUpdated: '[Notes] Updated note',\r\n    notesFileUrl:'[Notes] Upload image url',\r\n    notesDelete: '[Notes] Delete note',\r\n    notesLogoutCleaing: '[Notes] Logout cleaning'\r\n}","\r\nexport const fileUpload = async ( file ) => {\r\n\r\n    const cloudUrl = 'https://api.cloudinary.com/v1_1/dfnxgcwex/upload'\r\n\r\n    const formData = new FormData()\r\n    formData.append('upload_preset','react-journal')\r\n    formData.append('file', file)\r\n\r\n    try {\r\n        const resp = await fetch( cloudUrl , {\r\n            method: 'POST',\r\n            body: formData\r\n        })\r\n\r\n        if( resp.ok ){\r\n            const cloudResp = await resp.json()\r\n            return cloudResp.secure_url\r\n        }else{\r\n            throw await resp.json()\r\n        }\r\n\r\n    }catch(error){\r\n        console.log(error)\r\n    }\r\n}","import { db } from \"../firebase/firebase-config\"\r\nimport { loadNotes } from \"../helpers/loadNotes\";\r\nimport { types } from \"../types/types\";\r\nimport Swal from \"sweetalert2\";\r\nimport { fileUpload } from \"../helpers/fileUpload\";\r\n\r\n\r\nexport const startNewNote = () => {\r\n    return async (dispatch, getState) => {\r\n\r\n        const { uid } = getState().auth;\r\n\r\n        const newNote = {\r\n            title: '',\r\n            body: '',\r\n            date: new Date().getTime()\r\n        }\r\n\r\n        const docRef = await db.collection(`${uid}/journal/notes`).add(newNote)\r\n        \r\n        dispatch( activeNote(docRef.id, newNote) )\r\n        dispatch( addNewNote( docRef.id, newNote ) )\r\n    }\r\n}\r\n\r\nexport const activeNote = (id, note) => {\r\n    return {\r\n        type: types.notesActive,\r\n        payload: {\r\n            id,\r\n            ...note\r\n        }\r\n    }\r\n}\r\n\r\nexport const addNewNote = ( id, note ) => {\r\n    return {\r\n        type: types.notesAddNew,\r\n        payload:{\r\n            id, ...note\r\n        }\r\n    }\r\n}\r\n\r\nexport const startLoadingNotes = (uid) => {\r\n    return async (dispatch) => {\r\n        const notes = await loadNotes( uid )\r\n        dispatch( setNotes(notes) )\r\n    }\r\n}\r\n\r\nexport const setNotes = (notes) => {\r\n    return {\r\n        type: types.notesLoad,\r\n        payload: notes\r\n    }\r\n}\r\n\r\nexport const startSaveNotes = (note) => {\r\n    return async (dispatch, getState) => {\r\n        \r\n        const { uid } = getState().auth;\r\n\r\n        if( !note.url ){\r\n            delete note.url\r\n        }\r\n\r\n        const noteToFiresotre = { ...note }\r\n        delete noteToFiresotre.id\r\n\r\n        await db.doc(`${ uid }/journal/notes/${ note.id }`).update(noteToFiresotre)\r\n\r\n        dispatch( refreshNote(note.id, note) )\r\n        Swal.fire('Saved', note.title, 'success')\r\n    }\r\n}\r\n\r\nexport const refreshNote = ( idNote, note) => {\r\n    return {\r\n        type: types.notesUpdated,\r\n        payload: {\r\n            id: idNote,\r\n            note: {\r\n                idNote,\r\n                ...note\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport const startUploading = ( file ) => {\r\n    return async (dispatch, getState) => {\r\n        const { active:activeNote } = getState().notes\r\n\r\n        Swal.fire({\r\n            title:'Uploading...',\r\n            text: 'Please await',\r\n            allowOutsideClick: false,\r\n            willOpen: () => {\r\n                Swal.showLoading()\r\n            } \r\n        })\r\n\r\n        const urlFile = await fileUpload(file)\r\n\r\n        activeNote.url = urlFile\r\n\r\n        dispatch( startSaveNotes( activeNote ) )\r\n\r\n        Swal.close()\r\n    }\r\n}\r\n\r\nexport const startDeleting = ( id ) => {\r\n    return async (disptach, getState) => {\r\n        const { uid } = getState().auth;\r\n\r\n        await db.doc(`${ uid }/journal/notes/${ id }`).delete()\r\n\r\n        disptach( deleteNote( id ) )\r\n    }\r\n}\r\n\r\nexport const deleteNote = ( id ) => {\r\n    return {\r\n        type: types.notesDelete,\r\n        payload: id\r\n    }\r\n}\r\n\r\nexport const noteLogout = () => {\r\n    return {\r\n        type: types.notesLogoutCleaing\r\n    }\r\n}","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { startSaveNotes, startUploading } from '../../actions/notes'\r\n\r\n\r\nexport const NotesAppBar = () => {\r\n\r\n    const dispatch = useDispatch()\r\n    const {active:note} = useSelector(state => state.notes)\r\n\r\n    const handleSave = () => {\r\n        dispatch( startSaveNotes(note) )\r\n    }\r\n\r\n    const handleLoadImg = () => {\r\n        document.querySelector('#fileSelector').click()\r\n    }\r\n\r\n    const handleFileChange = (e) => {\r\n        const file = e.target.files[0]\r\n\r\n        if( file ){\r\n            dispatch( startUploading(file) )\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className='notes__appbar'>\r\n            <span> 28 de agosto de 2020</span>\r\n\r\n            <input\r\n                id='fileSelector'\r\n                type='file'\r\n                name='file'\r\n                style={{display:'none'}}\r\n                onChange={handleFileChange}\r\n            />\r\n\r\n            <div>\r\n                <button\r\n                    className='btn'\r\n                    onClick={handleLoadImg}\r\n                >\r\n                    Picture\r\n                </button>\r\n\r\n                <button\r\n                    className='btn'\r\n                    onClick={handleSave}\r\n                >\r\n                    Save\r\n                </button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import { useState } from \"react\"\r\n\r\nexport const useForm = ( initialState = {} ) => {\r\n\r\n    const [values, setValues] = useState(initialState)\r\n\r\n    const reset = ( newInitialState = initialState) => {\r\n        setValues(newInitialState)\r\n    }\r\n\r\n    const handleInputChange = ({ target }) => {\r\n        setValues({\r\n            ...values,\r\n            [target.name]: target.value\r\n        })\r\n    }\r\n\r\n    return [ values, handleInputChange, reset ]\r\n}","import React, { useEffect, useRef } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { NotesAppBar } from './NotesAppBar'\r\nimport { useForm } from '../../hooks/useForm';\r\nimport { activeNote, startDeleting } from '../../actions/notes';\r\n\r\nexport const NoteScreen = () => {\r\n\r\n    const dispatch = useDispatch()\r\n    const {active:note} = useSelector(state => state.notes)\r\n    const [formValue, handleInputChange, reset ] = useForm(note)\r\n    const {title, body} = formValue\r\n\r\n    const activeID = useRef(note.id) \r\n    useEffect(() => {\r\n        if(note.id !== activeID.current){\r\n            reset( note )\r\n            activeID.current = note.id\r\n        }\r\n        \r\n    }, [note, reset])\r\n    \r\n    useEffect(() => {\r\n        \r\n        dispatch( activeNote(formValue.id, { ...formValue }) )\r\n\r\n    }, [formValue, dispatch])\r\n\r\n    const handleDelete = () => {\r\n        dispatch( startDeleting( activeID.current ) )\r\n    }\r\n\r\n    return (\r\n        <div className='notes__main-content'>\r\n            \r\n            <NotesAppBar />\r\n\r\n            <div className='notes__content'>\r\n\r\n                <input\r\n                    type='text'\r\n                    placeholder='Title'\r\n                    className='notes__title-input'\r\n                    autoComplete='off'\r\n                    name='title'\r\n                    value={title}\r\n                    onChange={handleInputChange}\r\n                />\r\n\r\n                <textarea\r\n                    placeholder='Write something...'\r\n                    className='notes__textarea'\r\n                    name='body'\r\n                    value={body}\r\n                    onChange={handleInputChange}\r\n                ></textarea>\r\n\r\n                {\r\n                    (note.url) &&\r\n                    <div className='notes__image'>\r\n                        <img \r\n                            src={note.url}\r\n                            alt='backgroud'\r\n                        />\r\n                    </div>\r\n                }\r\n            </div>\r\n\r\n            <button \r\n                className='btn btn-danger'\r\n                onClick={handleDelete}\r\n            >\r\n                Delete\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n","import { firebase, googleAuthProvider } from \"../firebase/firebase-config\";\r\nimport { types } from \"../types/types\"\r\n\r\nimport Swal from 'sweetalert2'\r\nimport { noteLogout } from \"./notes\";\r\n\r\nexport const startLoginWithEmailPassword = (email, password) => {\r\n    return (dispatch) => {\r\n        dispatch( startLoading() )\r\n\r\n        firebase.auth().signInWithEmailAndPassword( email, password )\r\n        .then( ({user}) => {\r\n            dispatch( login( user.uid, user.displayName ) )\r\n\r\n            dispatch( finishLoading() )\r\n        })\r\n        .catch( e => {\r\n            console.log(e)\r\n            dispatch( finishLoading() )\r\n            Swal.fire('error', e.message, 'error')\r\n        })\r\n    }\r\n}\r\n\r\nexport const startRegisterLoginWithEmailPassword = (name, email, password) => {\r\n    return (dispatch) => {\r\n        firebase.auth().createUserWithEmailAndPassword( email, password )\r\n            .then ( async ({ user }) => {\r\n                \r\n                await user.updateProfile( { displayName: name } )\r\n\r\n                //console.log(user)\r\n                dispatch(\r\n                    login( user.uid, user.displayName )\r\n                )\r\n            } )\r\n            .catch( e => {\r\n                //console.log(e)\r\n                Swal.fire('error', e.message, 'error')\r\n            })\r\n    }\r\n}\r\n\r\nexport const startGoogleLogin = () => {\r\n    \r\n    return (dispatch) => {\r\n        firebase.auth().signInWithPopup( googleAuthProvider )\r\n            .then ( ({ user }) => {\r\n                //console.log(userCredential)\r\n                dispatch(\r\n                    login( user.uid, user.displayName )\r\n                )\r\n            } )\r\n    }\r\n}\r\n\r\nexport const startLoading = () => {\r\n    return {\r\n        type: types.uiStartLoading,\r\n        payload: null\r\n    }\r\n}\r\n\r\nexport const finishLoading  = () => {\r\n    return {\r\n        type: types.uiFinishLoading,\r\n        payload: null\r\n    }\r\n}\r\n\r\nexport const login = (uid, displayName) => {\r\n    return {\r\n        type: types.login,\r\n        payload: {\r\n            uid,\r\n            displayName\r\n        }\r\n    }\r\n}\r\n\r\nexport const startLogout = () => {\r\n    return async (dispatch) => {\r\n        await firebase.auth().signOut()\r\n\r\n        dispatch(logout())\r\n\r\n        dispatch( noteLogout() )\r\n    }\r\n}\r\n\r\nexport const logout = () => {\r\n    return {\r\n        type: types.logout\r\n    }\r\n}","import React from 'react'\r\nimport moment from \"moment\";\r\nimport { activeNote } from '../../actions/notes';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nexport const JournalEntry = ({ id, date, title, body, url }) => {\r\n\r\n    const noteDate = moment(date)\r\n    const dispatch = useDispatch()\r\n\r\n    const handleentryClick = () => {\r\n        dispatch(activeNote(id, {title, body, url, date}))\r\n    }\r\n\r\n    return (\r\n        <div \r\n            className='journal__entry pointer  animate__animated animate__fadeIn animate__faster'\r\n            onClick={handleentryClick}\r\n        >\r\n            {\r\n                url &&\r\n                <div \r\n                    className='journal__entry-picture'\r\n                    style={{\r\n                        backgroundSize:'cover',\r\n                        backgroundImage:`url(${url})`\r\n                    }}\r\n                >\r\n                </div>\r\n            }\r\n\r\n            <div className='journal__entry-body'>\r\n                <p className='journal__entry-title'> {`${title.substring(0,12)}...`} </p>\r\n                <p className='journal__entry-content'> { `${body.substring(0,22)}...`} </p>\r\n            </div>\r\n\r\n            <div className='journal__entry-date-box'>\r\n                <span> {noteDate.format('dddd')} </span>\r\n                <h4> {noteDate.format('Do')} </h4>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { JournalEntry } from './JournalEntry'\r\n\r\nexport const JournalEntries = () => {\r\n\r\n    const { notes } = useSelector(state => state.notes)\r\n\r\n    return (\r\n        <div className='journal__entries'>\r\n            {\r\n                notes.map( entry => (\r\n                    <JournalEntry \r\n                        key={entry.id} \r\n                        { ...entry }\r\n                    />\r\n                ))\r\n            }\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { startLogout } from '../../actions/auth'\r\nimport { startNewNote } from '../../actions/notes'\r\nimport { JournalEntries } from './JournalEntries'\r\n\r\nexport const Sidebar = () => {\r\n    \r\n    const { name } = useSelector(state => state.auth)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const handleLogout = () => {\r\n        dispatch( startLogout() )\r\n    }\r\n\r\n    const handleAddNew = () => {\r\n        dispatch( startNewNote() )\r\n    }\r\n\r\n    return (\r\n        <aside className='journal__sidebar'>\r\n            \r\n            <div className='journal__sidebar-navbar'>\r\n                <h3 className='mt-5'>\r\n                    <i className='far fa-moon'></i>\r\n                    <span> {name} </span>\r\n                </h3>\r\n\r\n                <button\r\n                    className='btn'\r\n                    onClick={handleLogout}\r\n                >\r\n                    Logout\r\n                </button>\r\n            </div>\r\n\r\n            <div \r\n                className='journal__new-entry'\r\n                onClick={handleAddNew}\r\n            >\r\n                <i className='far fa-calendar-plus fa-5x'></i>\r\n                <p className='mt-5'>\r\n                    New enter\r\n                </p>\r\n            </div>\r\n\r\n\r\n            <JournalEntries />\r\n        </aside>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport const NothingSelected = () => {\r\n    return (\r\n        <div className='nothing__main-content'>\r\n            <p>\r\n                Select something\r\n                <br/>\r\n                pr create an entry!\r\n            </p>\r\n\r\n            <i className='far fa-star fa-4x mt-5'></i>\r\n            \r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { NoteScreen } from '../notes/NoteScreen'\r\nimport { Sidebar } from './Sidebar'\r\nimport { NothingSelected } from './NothingSelected'\r\n\r\nexport const JournalScreen = () => {\r\n\r\n    const { active } = useSelector(state => state.notes)\r\n\r\n    return (\r\n        <div className='journal__main-content animate__animated animate__fadeIn animate__faster'>\r\n            \r\n            <Sidebar />\r\n\r\n            <main>\r\n                {\r\n                    (active) \r\n                    ? (<NoteScreen />)\r\n                    : (<NothingSelected />)\r\n                }\r\n            </main>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { Link } from \"react-router-dom\";\r\nimport { startGoogleLogin, startLoginWithEmailPassword } from '../../actions/auth';\r\nimport { useForm } from '../../hooks/useForm';\r\n\r\nexport const LoginScreen = () => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const { loading } = useSelector(state => state.ui)\r\n\r\n    const [ formValues, handleInputChange ] = useForm({\r\n        email:'alex@correo.com',\r\n        password: '1234567'\r\n    })\r\n\r\n    const { email, password } = formValues\r\n\r\n    const handleLogin = (e) => {\r\n        e.preventDefault()\r\n\r\n        dispatch( startLoginWithEmailPassword ( email, password ) )\r\n    }\r\n\r\n    const handleGoogleLogin = () => {\r\n        dispatch( startGoogleLogin() )\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <h3 className='auth__title'> Login </h3>\r\n\r\n            <form \r\n                onSubmit={handleLogin}\r\n                className='animate__animated animate__fadeIn animate__faster'\r\n            >\r\n                <input \r\n                    type='text'\r\n                    placeholder='Email'\r\n                    name='email'\r\n                    className='auth__input'\r\n                    autoComplete='off'\r\n                    value={email}\r\n                    onChange={handleInputChange}\r\n                />\r\n\r\n                <input \r\n                    type='password'\r\n                    placeholder='Password'\r\n                    name='password'\r\n                    className='auth__input'\r\n                    value={password}\r\n                    onChange={handleInputChange}\r\n                />  \r\n\r\n                <button\r\n                    type='submit'\r\n                    className='btn btn-primary btn-block'\r\n                    disabled={ loading }\r\n                >\r\n                    login\r\n                </button>\r\n\r\n                <div className='auth__social-networks'>\r\n                    <p> Login with: </p>\r\n                    <div \r\n                        className=\"google-btn\"\r\n                        onClick={handleGoogleLogin}\r\n                    >\r\n                        <div className=\"google-icon-wrapper\">\r\n                            <img className=\"google-icon\" src=\"https://upload.wikimedia.org/wikipedia/commons/5/53/Google_%22G%22_Logo.svg\" alt=\"google button\" />\r\n                        </div>\r\n                        <p className=\"btn-text\">\r\n                            <b>Sign in with google</b>\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n\r\n                <Link \r\n                    to='/auth/register'\r\n                    className='link'\r\n                >\r\n                    Create new account\r\n                </Link>\r\n            </form>\r\n        </>\r\n    )\r\n}\r\n","import { types } from \"../types/types\"\r\n\r\n\r\nexport const setError = ( errorString ) => {\r\n    return {\r\n        type: types.uiSetError,\r\n        payload: errorString\r\n    }\r\n}\r\n\r\nexport const removeError = ( ) => {\r\n    return {\r\n        type: types.uiRemoveError\r\n    }\r\n}","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport validator from 'validator';\r\nimport { Link } from 'react-router-dom'\r\nimport { useForm } from '../../hooks/useForm'\r\nimport { removeError, setError } from '../../actions/ui';\r\nimport { startRegisterLoginWithEmailPassword } from '../../actions/auth';\r\n\r\nexport const RegisterScreen = () => {\r\n    \r\n    const dispatch = useDispatch()\r\n\r\n    const { msgError } = useSelector(state => state.ui)\r\n\r\n    const [ formValue, handleInputChange ] = useForm({\r\n        userName: 'Alex',\r\n        userEmail:'alex@correo.com',\r\n        userPassword: '1234567',\r\n        userPasswordConfirm: '1234567'\r\n    })\r\n\r\n    const {\r\n        userName,\r\n        userEmail,\r\n        userPassword,\r\n        userPasswordConfirm\r\n    } = formValue\r\n\r\n    const handleRegister = (e) => {\r\n        e.preventDefault()\r\n\r\n        if ( isFormValid() ){\r\n            dispatch( startRegisterLoginWithEmailPassword( userName, userEmail, userPassword ) )\r\n        }\r\n    }\r\n\r\n    const isFormValid = () => {\r\n        \r\n        if( userName.trim().length === 0 ){\r\n            console.log(\"Invalid name\")\r\n            return false;\r\n\r\n        } else if( !validator.isEmail(userEmail) ){\r\n            dispatch( setError( \"Invalid email\" ) )\r\n            return false;\r\n        }else if(userPassword.length < 5){\r\n            dispatch( setError( \"Invalid password: the password is too short\" ) )\r\n            return false;\r\n        }else if(userPassword !== userPasswordConfirm ){\r\n            dispatch( setError( \"Passwords aren´t equal\" ) )\r\n            return false;\r\n        }\r\n\r\n        dispatch( removeError() )\r\n        return true;\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <h3 className='auth__title'> Register </h3>\r\n\r\n            <form \r\n                onSubmit={handleRegister}\r\n                className='animate__animated animate__fadeIn animate__faster'\r\n            >\r\n                {\r\n                    // Si msgError existe, entonces hace eso\r\n                    msgError && \r\n                    <div className=\"auth__alert-error\">\r\n                        { msgError }\r\n                    </div>\r\n                }\r\n\r\n                <input \r\n                    type='text'\r\n                    placeholder='Name'\r\n                    name='userName'\r\n                    className='auth__input'\r\n                    autoComplete='off'\r\n                    value={ userName }\r\n                    onChange={ handleInputChange }\r\n                />\r\n\r\n                <input \r\n                    type='text'\r\n                    placeholder='Email'\r\n                    name='userEmail'\r\n                    className='auth__input'\r\n                    autoComplete='off'\r\n                    value={ userEmail }\r\n                    onChange={ handleInputChange }\r\n                />\r\n\r\n                <input \r\n                    type='password'\r\n                    placeholder='Password'\r\n                    name='userPassword'\r\n                    className='auth__input'\r\n                    value={ userPassword }\r\n                    onChange={ handleInputChange }\r\n                />\r\n\r\n                <input \r\n                    type='password'\r\n                    placeholder='Confirm password'\r\n                    name='userPasswordConfirm'\r\n                    className='auth__input'\r\n                    value={ userPasswordConfirm }\r\n                    onChange={ handleInputChange }\r\n                />  \r\n\r\n                <button\r\n                    type='submit'\r\n                    className='btn btn-primary btn-block mb-5'\r\n                >\r\n                    Register\r\n                </button>\r\n\r\n                <Link \r\n                    to='/auth/login'\r\n                    className='link'\r\n                >\r\n                    Alredy registered?\r\n                </Link>\r\n                \r\n            </form>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { \r\n    Redirect,\r\n    Route, \r\n    Switch\r\n} from 'react-router-dom'\r\nimport { LoginScreen } from '../components/auth/LoginScreen'\r\nimport { RegisterScreen } from '../components/auth/RegisterScreen'\r\n\r\nexport const AuthRouter = () => {\r\n    return (\r\n        <div className='auth__main'>\r\n            <div className='auth__box-container'>\r\n                <Switch>\r\n                    <Route exact path='/auth/login' component={LoginScreen}/>\r\n                    <Route exact path='/auth/register' component={RegisterScreen}/>\r\n                    <Redirect to='auth/login' />\r\n                </Switch>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport {  Route, Redirect } from 'react-router-dom'\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport const PublicRouter = ({\r\n    isAuthenticated,\r\n    component: Component,\r\n    ...rest\r\n}) => {\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            component={ (props) => \r\n                ( isAuthenticated )\r\n                ? ( <Redirect to='/' /> )\r\n                : ( <Component {...props} /> )\r\n            }\r\n        />\r\n    )\r\n}\r\n\r\nPublicRouter.prototype = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n}\r\n","import React from 'react'\r\nimport {  Route, Redirect } from 'react-router-dom'\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport const PrivateRouter = ({\r\n    isAuthenticated,\r\n    component: Component,\r\n    ...rest\r\n}) => {\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            component={ (props) => \r\n                ( isAuthenticated )\r\n                ? ( <Component {...props} /> )\r\n                : ( <Redirect to='/auth/login' /> )\r\n            }\r\n        />\r\n    )\r\n}\r\n\r\nPrivateRouter.prototype = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n}","import React from 'react'\r\n\r\nexport const SplashScreen = () => {\r\n    return (\r\n        <div className='auth__main'>\r\n            <p> Espere... </p>\r\n        </div>\r\n    )\r\n}","import React, { useEffect, useState } from 'react'\r\nimport { useDispatch } from 'react-redux';\r\nimport { firebase } from \"../firebase/firebase-config\";\r\nimport { \r\n    BrowserRouter as Router,\r\n    Redirect,\r\n    Switch \r\n} from 'react-router-dom'\r\nimport { JournalScreen } from '../components/journal/JournalScreen'\r\nimport { AuthRouter } from './AuthRouter'\r\nimport { login } from '../actions/auth';\r\nimport { PublicRouter } from './PublicRouter';\r\nimport { PrivateRouter } from './PrivateRouter';\r\nimport { SplashScreen } from '../components/auth/SplashScreen';\r\nimport { startLoadingNotes } from '../actions/notes';\r\n\r\nexport const AppRouter = () => {\r\n\r\n    const dispatch = useDispatch()\r\n    const [checkingDBLogin, setCheckingDBLogin] = useState(true)\r\n    const [isLoggedIn, setIsLoggedIn] = useState(false)\r\n\r\n    useEffect(() => {\r\n        firebase.auth().onAuthStateChanged( (user) => {\r\n\r\n            if(user?.uid){\r\n                dispatch( login( user.uid, user.displayName ) )\r\n                setIsLoggedIn(true)\r\n\r\n                dispatch( startLoadingNotes(user.uid) )\r\n\r\n            }else {\r\n                setIsLoggedIn(false)\r\n            }\r\n\r\n            setCheckingDBLogin(false)\r\n        } )\r\n    }, [dispatch, setCheckingDBLogin])\r\n\r\n    if(checkingDBLogin){\r\n        return (\r\n            <SplashScreen />\r\n        )\r\n    }\r\n\r\n    return (\r\n        <Router>\r\n            <div>\r\n                <Switch>\r\n                    <PublicRouter \r\n                        path='/auth'\r\n                        isAuthenticated={isLoggedIn}\r\n                        component={AuthRouter}\r\n                    />\r\n\r\n                    <PrivateRouter \r\n                        exact\r\n                        path='/'\r\n                        isAuthenticated={isLoggedIn}\r\n                        component={JournalScreen}\r\n                    />\r\n\r\n                    <Redirect to='auth/login' />\r\n                </Switch>\r\n            </div>\r\n        </Router>\r\n    )\r\n}","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    notes: [],\r\n    active: null\r\n}\r\n\r\nexport const notesReducers = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case types.notesActive:\r\n            return {\r\n                ...state,\r\n                active: {\r\n                    ...action.payload\r\n                }\r\n            }\r\n\r\n        case types.notesAddNew:\r\n            return{\r\n                ...state,\r\n                notes: [ action.payload, ...state.notes]\r\n            }\r\n\r\n        case types.notesLoad:\r\n            return {\r\n                ...state,\r\n                notes: [...action.payload]\r\n            }\r\n\r\n        case types.notesUpdated:\r\n            return {\r\n                ...state,\r\n                notes: state.notes.map(\r\n                    note => note.id === action.payload.id\r\n                    ? action.payload.note\r\n                    : note\r\n                )\r\n            }\r\n\r\n        case types.notesDelete:\r\n            return {\r\n                ...state,\r\n                active: null,\r\n                notes: state.notes.filter( note => note.id !== action.payload )\r\n            }\r\n        case types.notesLogoutCleaing:\r\n            return {\r\n                ...state,\r\n                active: null,\r\n                notes: []\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    loading: false,\r\n    msgError: null\r\n}\r\n\r\nexport const uiReducer = ( state = initialState, action) => {\r\n    switch (action.type) {\r\n        case types.uiSetError:\r\n            return {\r\n                ...state,\r\n                msgError: action.payload\r\n            };\r\n\r\n        case types.uiRemoveError:\r\n            return {\r\n                ...state,\r\n                msgError: null\r\n            };\r\n\r\n        case types.uiStartLoading:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            };\r\n\r\n        case types.uiFinishLoading:\r\n            return {\r\n                ...state,\r\n                loading: false\r\n            };\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n}","import { createStore, combineReducers, applyMiddleware, compose } from \"redux\";\r\nimport thunk from 'redux-thunk';\r\nimport { authReducer } from \"../reducers/authReducer\";\r\nimport { notesReducers } from \"../reducers/notesReducer\";\r\nimport { uiReducer } from \"../reducers/uiReducers\";\r\n\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\nconst reducers = combineReducers({\r\n    auth: authReducer,\r\n    ui: uiReducer,\r\n    notes: notesReducers\r\n})\r\n\r\nexport const store = createStore(\r\n    reducers,\r\n    composeEnhancers(\r\n        applyMiddleware(thunk)\r\n    )\r\n)","import { types } from \"../types/types\";\r\n\r\nexport const authReducer = ( state = {}, action ) => {\r\n\r\n    switch (action.type) {\r\n        case types.login:\r\n            return {\r\n                uid: action.payload.uid,\r\n                name: action.payload.displayName\r\n            }\r\n\r\n        case types.logout:\r\n           return {}\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n}","import React from 'react'\r\nimport { AppRouter } from './routers/AppRouter'\r\n\r\nimport { Provider } from \"react-redux\";\r\nimport { store } from './store/store';\r\n\r\nexport const JournalApp = () => {\r\n    return (\r\n        <Provider store={store}>\r\n            < AppRouter />\r\n        </Provider>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { JournalApp } from './JournalApp';\n\nimport './styles/styles.scss'\n\nReactDOM.render(\n  <JournalApp />,\n  document.getElementById('root')\n);"],"sourceRoot":""}